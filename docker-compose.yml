services:
  db:
    image: mariadb:${MARIADB_IMAGE_VERSION}
    container_name: frappe_mariadb
    networks:
      - frappe_network
    healthcheck:
      test: mysqladmin ping -h localhost --password=admin
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: ${NB_RETRIES}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - db-data:/var/lib/mysql
    deploy:
      restart_policy:
        condition: on-failure

  redis-cache:
    image: redis:${REDIS_IMAGE_VERSION}
    container_name: frappe_redis_cache
    networks:
      - frappe_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: ${NB_RETRIES}
    deploy:
      restart_policy:
        condition: on-failure

  redis-queue:
    image: redis:${REDIS_IMAGE_VERSION}
    container_name: frappe_redis_queue
    networks:
      - frappe_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: ${NB_RETRIES}
    volumes:
      - redis-queue-data:/data
    deploy:
      restart_policy:
        condition: on-failure

  backend:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_erpnext
    user: "frappe"
    networks:
      - frappe_network
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    volumes:
      - apps:/home/frappe/frappe-bench/apps
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: ${MARIADB_DB_NAME}
      DB_PORT: ${MARIADB_PORT_VAR}
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin
      REDIS_CACHE: redis-cache:${REDIS_PORT_VAR}
      REDIS_QUEUE: redis-queue:${REDIS_PORT_VAR}
      SOCKETIO_PORT: ${SOCKETIO_PORT_VAR}
    deploy:
      restart_policy:
        condition: on-failure

  configurator:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_configurator
    networks:
      - frappe_network
    depends_on:
      backend:
        condition: service_started
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    command: >
      bash -c "ls -1 apps > sites/apps.txt &&
      bench set-config -g db_host $$DB_HOST &&
      bench set-config -gp db_port $$DB_PORT &&
      bench set-config -g redis_cache \"redis://$$REDIS_CACHE\" &&
      bench set-config -g redis_queue \"redis://$$REDIS_QUEUE\" &&
      bench set-config -g redis_socketio \"redis://$$REDIS_QUEUE\" &&
      bench set-config -gp socketio_port $$SOCKETIO_PORT"
    environment:
      DB_HOST: ${MARIADB_DB_NAME}
      DB_PORT: ${MARIADB_PORT_VAR}
      REDIS_CACHE: redis-cache:${REDIS_PORT_VAR}
      REDIS_QUEUE: redis-queue:${REDIS_PORT_VAR}
      SOCKETIO_PORT: ${SOCKETIO_PORT_VAR}
    deploy:
      restart_policy:
        condition: none

  create-site:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_create_site
    user: "frappe"
    networks:
      - frappe_network
    depends_on:
      configurator:
        condition: service_completed_successfully
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    command: >
        bash -c "bench new-site --mariadb-user-host-login-scope='%' --admin-password=admin --db-root-username=root \
        --db-root-password=admin --install-app erpnext --set-default frontend"
    environment:
      DB_PORT: ${MARIADB_PORT_VAR}
    deploy:
      restart_policy:
        condition: none

  websocket:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_websocket
    networks:
      - frappe_network
    depends_on:
      create-site:
        condition: service_completed_successfully
    command: ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  frontend:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_frontend
    networks:
      - frappe_network
    depends_on:
      websocket:
        condition: service_started
    ports:
      - "${FRONTEND_PORT_VAR}:8080"
    command: ["nginx-entrypoint.sh"]
    environment:
      BACKEND: backend:${BACKEND_PORT_VAR}
      FRAPPE_SITE_NAME_HEADER: frontend
      SOCKETIO: websocket:${SOCKETIO_PORT_VAR}
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: ${TIMEOUT_BEFORE_EXIT}
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - apps:/home/frappe/frappe-bench/apps
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  scheduler:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_scheduler
    networks:
      - frappe_network
    depends_on:
      create-site:
        condition: service_completed_successfully
    command: ["bench", "schedule"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  queue-short:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_queue_short
    networks:
      - frappe_network
    depends_on:
      create-site:
        condition: service_completed_successfully
    command: ["bench", "worker", "--queue", "short,default"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  queue-long:
    image: softiafr/erpnext:${FRAPPE_ERPNEXT_IMAGE_VERSION}
    container_name: frappe_queue_long
    networks:
      - frappe_network
    depends_on:
      create-site:
        condition: service_completed_successfully
    command: ["bench", "worker", "--queue", "long,default,short"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  db-data:
  redis-queue-data:
  apps:
  sites:
  logs:

networks:
  frappe_network:
    driver: bridge